"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validateTokenHeader = void 0;
const axios_1 = require("axios");
const object_storage_factory_1 = require("./object-storage-factory");
const axios_try_catch_wrapper_1 = require("./axios-try-catch-wrapper");
const objectStorage = (0, object_storage_factory_1.objectStorageFactory)();
const getDiscoveryKeysApiUrl = (tenantId, applicationId) => `https://login.microsoftonline.com/${tenantId}/discovery/keys?appid=${applicationId}`;
async function callDiscoveryKeysApi(tenantId, applicationId) {
    const discoveryKeysApiUrl = getDiscoveryKeysApiUrl(tenantId, applicationId);
    return axios_1.default.get(discoveryKeysApiUrl);
}
async function validateTokenHeader(tokenHeader, tenantId, applicationId) {
    if (!tokenHeader.kid) {
        throw new Error('Token header does not contain "kid" property');
    }
    if (objectStorage.getItem(tokenHeader.kid)) {
        return;
    }
    const { data } = await (0, axios_try_catch_wrapper_1.axiosTryCatchWrapper)(() => callDiscoveryKeysApi(tenantId, applicationId), 'Discovery Keys API throws an error');
    const isValidPublicKey = data.keys.some((_key) => _key.kid === tokenHeader.kid);
    if (!isValidPublicKey) {
        throw new Error('The public key retrieved from the token header is invalid');
    }
    objectStorage.setItem(tokenHeader.kid, 'valid');
}
exports.validateTokenHeader = validateTokenHeader;
