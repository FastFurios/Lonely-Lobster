import { Jwt } from 'jsonwebtoken';

/**
 * The interface represents required fields to process access token validation
 *
 * @public
 */
export declare interface IValidationOptions {
    /**
     * Only present in v1.0 tokens. The application ID of the client using the token. The application can act as itself or on behalf of a user. The application ID typically represents an application object, but it can also represent a service principal object in Azure AD.
     */
    applicationId: string;
    /**
     * Identifies the intended recipient of the token - its audience. In v2.0 tokens, this is always the client ID of the API, while in v1.0 tokens it can be the client ID or the resource URI used in the request, depending on how the client requested the token.
     */
    audience: string;
    /**
     * The set of scopes exposed by your application for which the client application has requested (and received) consent.
     */
    scopes: string[];
    /**
     * Your Microsoft 365 tenant ID is a globally unique identifier (GUID) that is different than your organization name or domain.
     */
    tenantId: string;
}

/**
 * Validate azure active directory access token
 *
 * @param accessToken - valid access token received from azure
 * @param validationOptions - the interface represents required fields to process access token validation
 *
 * @public
 */
declare function validate(accessToken: string, { applicationId, audience, scopes, tenantId }: IValidationOptions): Promise<Jwt>;
export default validate;

export { }
